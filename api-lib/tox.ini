# Tox (https://tox.readthedocs.io/en/latest/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 1.6
# Test envs list buid and run by default
envlist = py27, py36

# Common env configuration
[testenv]
setenv =
  LC_ALL = en_US.utf-8
whitelist_externals =
    sh
commands =
    rm -rf .stestr
    find {toxinidir} -type f -name "*.log*" -delete
    find {toxinidir} -type f -name "*.db" -delete
    - stestr run --abbreviate --slowest {posargs}
    sh -c "stestr last --subunit > {toxinidir}/testr.subunit"
    subunit2html {toxinidir}/testr.subunit {toxinidir}/test-results.html
    - sh -c "subunit2junitxml --output-to={toxinidir}/test-results.xml < {toxinidir}/testr.subunit"
    stestr last

deps =
    os-testr < 2.0.0
    stestr < 3.0.0
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
    mock

# Sandbox env where a command can be run, ie. "tox -evenv pip install ipdb"
[testenv:venv]
commands = {posargs}

# PEP8 checks env
[testenv:pep8]
basepython = python3
deps =
    flake8
    pylint
    hacking
commands =
    flake8
    pylint --rcfile=.pylintrc --output-format=colorized {[flake8]files_support_pep8}

# Test code coverage env
[testenv:cover]
setenv =
    PYTHON = coverage run --source . --parallel-mode
deps =
    {[testenv]deps}
    coverage
commands =
    stestr run --no-subunit-trace {posargs}
    coverage combine
    coverage html -d covhtml -i --title="Contrail API Client coverage report"
    coverage xml -o covhtml/coverage.xml
    coverage report

[flake8]
show-source = True
ignore = E123, E125
enable-extensions = H301, H306
files_support_pep8 =
    vnc_api/vnc_api.py
filename =
    */vnc_api.py
